# 添加默认的命令行选项
[pytest]
# 这些选项将应用于所有测试文件
# -v: 启用详细模式，显示更多输出信息
# --maxfail=2: 当有2个或更多的测试失败时，停止测试
# --tb=short: 使用简短的回溯信息，使输出更简洁
# --color=yes: 启用彩色输出
# --strict-markers: 严格检查测试函数和钩子函数的标记
# --html=./test/report/report.html: 生成HTML格式的测试报告
# --alluredir ./test/report/report-json: 生成Allure格式的测试报告
addopts = -v --maxfail=2 --tb=short --color=yes --strict-markers --html=./resource/report/report.html --alluredir ./resource/report/report-json

# 配置日志级别和格式
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S
;日志文件等级
log_file_level = info
;日志文件格式
log_file_format = %(asctime)s --> %(filename)-10s [line:%(lineno)-3d] --> %(levelname)-5s --> %(message)s
;日志文件日期格式
log_file_date_format = %Y-%m-%d %H:%M:%S

# 指定pytest应该搜索测试文件的路径
# 可以是相对路径或绝对路径
testpaths = test/case

# 忽略递归查找测试时的目录
norecursedirs = docs/

# 修改默认的测试模块文件名规则
# 默认是 test_*.py 或 *_test.py
python_files = test_*.py

# 修改默认的测试类名称规则
# 默认是 Test*
python_classes = Test*

# 修改默认的测试用例函数名称规则
# 默认是 test_*
# 你也可以同时指定多个模式，用空格分隔
# python_functions = my_test_* another_test_*
python_functions = test_*

# 定义常用的测试标记
markers =
    smoke: 冒烟测试用例
    regression: 回归测试用例
    integration: 集成测试用例
    unit: 单元测试用例
    slow: 运行时间较长的测试用例

# 设置测试超时时间（秒）
timeout = 300